/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int cnt=0;
       ListNode*temp=head;
       while(temp!=nullptr){
        cnt++;
        temp=temp->next;
       }
       if(cnt<n){
        return head;
        
       }
       // if  the head has to remove
       if(cnt==n){
        ListNode*newhead=head->next;
        ListNode*del=head;
        delete(del);
        return newhead;
       }
       temp=head;
       int count=1;
       while(count!=cnt-n){
        temp=temp->next;
        count++;
       }
       ListNode*res=temp->next;
       temp->next=res->next;
       delete(res);
    

       return head;
        
    }
};
